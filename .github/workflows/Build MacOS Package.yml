name: Build MacOS Package

on:
  workflow_dispatch: # Manual trigger


jobs:
  create-mac-package:
    name: Create Package On ${{ matrix.os }} - ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ macos-15, macos-latest ]
        include:
          - os: macos-15
            arch: x64
            name: macOS x86_64
          - os: macos-latest
            arch: aarch64
            name: macOS aarch64
    permissions:
      contents: write
    steps:
      - name: Generate a token
        id: generate-token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'jetbrains'
          java-version: '21'
        env:
          GITHUB_TOKEN: ${{ steps.generate-token.outputs.token }}

      # Check out current repository
      - name: Fetch Sources
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history
          tags: true  # Fetch all tags

      # Add execute permissions to gradlew
      - name: Set execute permissions on gradlew
        run: chmod +x ./gradlew

      - name: Set UTF-8 encoding for Windows
        if: runner.os == 'Windows'
        run: |
          # 设置 Gradle 的 JVM 参数，强制使用 UTF-8 编码
          # 解决 Windows 环境下中文字符显示为问号的问题
          echo "GRADLE_OPTS=-Dfile.encoding=UTF-8 -Dstdout.encoding=UTF-8 -Dstderr.encoding=UTF-8" >> $env:GITHUB_ENV


      # Build Desktop Packaged application
      - name: Desktop App Package
        run: ./gradlew packageDmg

      # Get the latest tag
      - name: Get latest tag
        id: latesttag
        run: |
          TAG=$(git describe --tags $(git rev-list --tags --max-count=1) 2>/dev/null || echo "1.0.0")
          echo "TAG=$TAG" >> $GITHUB_ENV

      - name: Upload Artifact
        if: github.event_name == 'workflow_dispatch'
        uses: actions/upload-artifact@v4
        with:
          name: macos-package-${{ matrix.arch }}
          path: build/compose/binaries/main/dmg/*.dmg

      - name: Draft Release
        if: github.event_name != 'workflow_dispatch'
        uses: ncipollo/release-action@v1
        with:
          draft: true
          allowUpdates: true
          generateReleaseNotes: false  #自动生成发行说明。
          tag: "${{ env.TAG }}"
          artifacts: "${{ github.workspace }}/build/compose/binaries/main/dmg/*.dmg"
          token: ${{ steps.generate-token.outputs.token }}